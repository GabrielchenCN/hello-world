<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title></title>
</head>
<script>
    function numstr(str){

var obj={};
for(var i=0,l=str.length,k;i<l;i++){
	k=str.charAt(i);
	if(obj[k]){
		obj[k]++;
	}else{
		obj[k]=1;
	}
}
var m=0;
var i=null;
for(var k in obj){
	if(obj[k]>m){
		m=obj[k];
		i=k;
	}
}
alert(i+':'+m);

    }

    var str = "wqdewqewwwwweqqwwws";
var length, name, tempReg, temp;
(function tes(str) {
    if (!str) return;
    length < (temp = str.match((tempReg = new RegExp(str[0], 'g'), tempReg)).length, temp) ? (length = str.match(tempReg).length, name = str[0], arguments.callee(str.replace(tempReg, ''))) : arguments.callee(str.replace(tempReg, ''));
})(str)
console.log(name + "\n" + length);

    /**
    取出字符串中重复字数最多的字符
*/
var words = 'wqdewqewwwwweqqwwws';//创建字符串
var word,//单个字符
    length;//该字符的长度
//定义输出对象
var max = {
    wordName : '',//重复次数最多的字符
    wordLength : 0//重复的次数
};
//递归方法,传入字符串
(function(words) {
    if (!words) return;                 //如果字符串已经变空则返回,结束递归
    word    = words[0];                 //取出字符串中的第一个字符
    length  = words.length;                 //将length设为当前字符串长度
    words   = words.replace(new RegExp(word, 'g'), ''); //返回将字符串剔除当前字符的剩余字符串
    length  = length - words.length;            //重设length为当前字符在字符串中的长度
    if (length > max.wordLength)             //如果该字符重复次数大于maxLength,则重设maxLength为当前字符重复次数
        max = {                              //重设对象的值
            wordName    : word,
            wordLength  : length
        };
    arguments.callee(words);                //递归调用,传入剩余字符串
})(words);
console.log(max.wordName+"\n"+max.wordLength);          //递归结束后输出结果


    var a =numstr("wqdewqewwwwweqqwwws");

</script>
<body>

</body>
</html>
